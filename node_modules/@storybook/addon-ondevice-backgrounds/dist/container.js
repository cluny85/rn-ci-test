"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var constants_1 = __importDefault(require("./constants"));
var Container = /** @class */ (function (_super) {
    __extends(Container, _super);
    function Container(props) {
        var _this = _super.call(this, props) || this;
        _this.onBackgroundChange = function (background) {
            _this.setState({ background: background });
        };
        _this.state = { background: props.initialBackground || '' };
        return _this;
    }
    Container.prototype.componentDidMount = function () {
        var channel = this.props.channel;
        channel.on(constants_1.default.UPDATE_BACKGROUND, this.onBackgroundChange);
    };
    Container.prototype.componentWillUnmount = function () {
        var channel = this.props.channel;
        channel.removeListener(constants_1.default.UPDATE_BACKGROUND, this.onBackgroundChange);
    };
    Container.prototype.render = function () {
        var background = this.state.background;
        var children = this.props.children;
        return (react_1.default.createElement(react_native_1.View, { style: { flex: 1, backgroundColor: background || 'transparent' } }, children));
    };
    return Container;
}(react_1.Component));
exports.default = Container;

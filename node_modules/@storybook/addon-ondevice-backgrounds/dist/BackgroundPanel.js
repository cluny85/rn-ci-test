"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
/* eslint-disable react/destructuring-assignment, import/no-extraneous-dependencies */
var react_1 = __importStar(require("react"));
var react_native_1 = require("react-native");
var core_events_1 = __importDefault(require("@storybook/core-events"));
var Swatch_1 = __importDefault(require("./Swatch"));
var constants_1 = __importStar(require("./constants"));
var codeSample = "\nimport { storiesOf } from '@storybook/react-native';\nimport { withBackgrounds } from '@storybook/addon-ondevice-backgrounds';\n\naddDecorator(withBackgrounds);\n\nstoriesOf('First Component', module)\n  .addParameters({\n    backgrounds: [\n      { name: 'warm', value: 'hotpink', default: true },\n      { name: 'cool', value: 'deepskyblue' },\n    ],\n  })\n  .add(\"First Button\", () => <Button>Click me</Button>);\n".trim();
var Instructions = function () { return (react_1.default.createElement(react_native_1.View, null,
    react_1.default.createElement(react_native_1.Text, { style: { fontSize: 16 } }, "Setup Instructions"),
    react_1.default.createElement(react_native_1.Text, null, "Please add the background decorator definition to your story. The background decorate accepts an array of items, which should include a name for your color (preferably the css class name) and the corresponding color / image value."),
    react_1.default.createElement(react_native_1.Text, null, "Below is an example of how to add the background decorator to your story definition."),
    react_1.default.createElement(react_native_1.Text, null, codeSample))); };
var BackgroundPanel = /** @class */ (function (_super) {
    __extends(BackgroundPanel, _super);
    function BackgroundPanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.setBackgroundFromSwatch = function (background) {
            _this.props.channel.emit(constants_1.default.UPDATE_BACKGROUND, background);
        };
        _this.onStorySelected = function (selection) {
            _this.setState({ selection: selection });
        };
        return _this;
    }
    BackgroundPanel.prototype.componentDidMount = function () {
        this.props.channel.on(core_events_1.default.SELECT_STORY, this.onStorySelected);
    };
    BackgroundPanel.prototype.componentWillUnmount = function () {
        this.props.channel.removeListener(core_events_1.default.SELECT_STORY, this.onStorySelected);
    };
    BackgroundPanel.prototype.render = function () {
        var _this = this;
        var _a = this.props, active = _a.active, api = _a.api;
        if (!active || !this.state) {
            return null;
        }
        var story = api
            .store()
            .getStoryAndParameters(this.state.selection.kind, this.state.selection.story);
        var backgrounds = story.parameters[constants_1.PARAM_KEY];
        return (react_1.default.createElement(react_native_1.View, null, backgrounds ? (backgrounds.map(function (_a) {
            var value = _a.value, name = _a.name;
            return (react_1.default.createElement(react_native_1.View, { key: name + " " + value },
                react_1.default.createElement(Swatch_1.default, { value: value, name: name, setBackground: _this.setBackgroundFromSwatch })));
        })) : (react_1.default.createElement(Instructions, null))));
    };
    return BackgroundPanel;
}(react_1.Component));
exports.default = BackgroundPanel;
